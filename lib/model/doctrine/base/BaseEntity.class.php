<?php

/**
 * BaseEntity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $sf_guard_user_id
 * @property string $last_name
 * @property string $first_name
 * @property string $address
 * @property string $phone
 * @property string $image
 * @property Entity $Entity
 * @property Doctrine_Collection $Users2
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $Entities
 * @property Doctrine_Collection $Entities2
 * 
 * @method integer             getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method string              getLastName()         Returns the current record's "last_name" value
 * @method string              getFirstName()        Returns the current record's "first_name" value
 * @method string              getAddress()          Returns the current record's "address" value
 * @method string              getPhone()            Returns the current record's "phone" value
 * @method string              getImage()            Returns the current record's "image" value
 * @method Entity              getEntity()           Returns the current record's "Entity" value
 * @method Doctrine_Collection getUsers2()           Returns the current record's "Users2" collection
 * @method Doctrine_Collection getUsers()            Returns the current record's "Users" collection
 * @method Doctrine_Collection getEntities()         Returns the current record's "Entities" collection
 * @method Doctrine_Collection getEntities2()        Returns the current record's "Entities2" collection
 * @method Entity              setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method Entity              setLastName()         Sets the current record's "last_name" value
 * @method Entity              setFirstName()        Sets the current record's "first_name" value
 * @method Entity              setAddress()          Sets the current record's "address" value
 * @method Entity              setPhone()            Sets the current record's "phone" value
 * @method Entity              setImage()            Sets the current record's "image" value
 * @method Entity              setEntity()           Sets the current record's "Entity" value
 * @method Entity              setUsers2()           Sets the current record's "Users2" collection
 * @method Entity              setUsers()            Sets the current record's "Users" collection
 * @method Entity              setEntities()         Sets the current record's "Entities" collection
 * @method Entity              setEntities2()        Sets the current record's "Entities2" collection
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEntity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('entity');
        $this->hasColumn('sf_guard_user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Entity', array(
             'local' => 'sf_guard_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Comments as Users2', array(
             'local' => 'id',
             'foreign' => 'member_id'));

        $this->hasMany('Entity as Users', array(
             'local' => 'id',
             'foreign' => 'sf_guard_user_id'));

        $this->hasMany('Restaurant as Entities', array(
             'local' => 'id',
             'foreign' => 'entity_id'));

        $this->hasMany('Cart as Entities2', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}